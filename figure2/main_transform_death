test_death_ori = [ 0
1
8
16
14
26
49
2
38
42
46
103
64
66
72
70
85
87
100
107
100
5
253
152
143
104
98
140
115
125
4
207
11
160
80
61
43
59
69
54
89
75
95
94
112
104
240
190
274
344
307
497
420
643
678
818
913
1116
1488
1724
1696
1951
2292
2823
3038
3498
3772
3494
4091
4764
6015
5895
6180
5953
5240
5974
8303
6844
7875
7431
6260
5940
6051
7082
8584
7379
8528
6239
5347
6030
7441
7035
7033
6954
5855
4248
5009
6818
6973
6057
5482
5828
3847
4604
6126
6866
5692
5914
4597
4011
3936
5905
5485
5572
5642
4556
3568
4154
5140
5194
5079
5681
4311
3477
1616
4664
5401
5011
5160
4384
3159
3515
5203
5840
5439
5060
4215
3188
4165
5214
5478
5066
4807
4461
3643
3837
7140
5556
5311
6386
4519
4599
3737
5573
5541
5038
5084
4794
3514
4027
5207
5310
5423
5294
4793
3829
4238
6340
5629
5789
5631
5212
4375
4315
6004
5855
6183
7043
6573
4681
4028
6399
7355
6623
6457
6150
4327
5232
6722
7009
6644
6581
6081
4405
5066
6994
7489
6889
6697
6068
4800
5728
6613
6946
6831
6664
6005
4627
4524
7217
7119
6412
5735
5808
4261
4823
6634
6559
6215
5862
5624
4322
4381
6669
6356
6077
5889
5152
4073
9595
5111
6276
6020
6025
5057
3942
4538
6609
5949
5598
5816
5388
3937
4340
6201
5650
6575
5946
5565
3812
4019
6069
6563
8803
5042
5450
4002
6999
5851
5921
6366
6215
4917
4104
4072
5377
6218
6084
6324
5677
3612
4904
6635
6713
5933
7080
5885
4199
5610
7446
7209
7147
7655
6669
5049
6217
9451
10146
8091
9742
7663
5929
7266
10037
10504
9824
9645
9165
6460
7973
11120
11467
11126
11841
8977
7304
8565
12718
12187
10980
11393
9279
7213
8967
12755
12693
12561
12598
10283
7499
8773
12391
12678
12697
13118
10633
7587
9148
13968
13776
13454
12921
10906
7887
9685
14361
13888
11750
8648
7475
7550
9790
15240
15397
13186
9806
8626
7452
10271
15518
15106
15135
15240
12996
8585
10347
17285
16851
15669
15147
13591
8900
9771
16950
18060
17157
16208
13764
9096
11238
17628
17169
17160
15511
13546
8558
10692
15288
16091
12923
17173
10430
8193
8990
16018
13921
13724
13154
10329
6602
7408
11602
11884
11829
11724
8862
6372
7428
11714
12432
10636
10717
8635
6120
7872
10362
11747
10273
10698
8100
5908
7086
10645
10060
10217
10103
8458
5969
7448
10562
10304
11024
11073
8702
5910
8039
11504
10426
11678
12893
10136
7240
8459
12094
12843
12411
10681
9143
7383
7714
12619
15338
14835
13893
12860
9381
9881
13831
14099
13673
13258
12555
9060
10889
14314
14959
13895
15185
13291
10428
11647
14963
16051
15763
14014
13267
10027
11801
14063
14885
14650
14399
13302
10210
11124
14244
13856
13688
13067
12209
10057
11204
14202
13574
13056
13011
11540
9759
9056
13190
12737
13059
11962
10754
8125
8718
15346
11818
9927
10969
9166
7075
8080
10381
10464
16007
11933
9767
9148
7886
10561
10342
9266
9211
8072
6561
7077
8935
9524
8611
9213
7464
5947
6646
8112
9156
8683
8274
6872
6389
7462
8565
8586
8845
8402
6005
7453
8237
8273
8713
8451
8711
7055
7012
7254
20748
8653
8827
7738
9216
7239
7860
9874
10235
10841
9515
8857
7067
8228
10263
10585
10981
10565
8578
7430
8656
11490
9956
10288
11295
8656
7215
9464
10715
10811
10615
11674];

test_death = test_death_ori';
syms c

a = 2.2;
b = 0.14;
d = int(c^(a-1)*exp(-c),0,inf);

for i = 1:577
    i
    for j = 1:577
        if i<= j
        new_death_number(i,j) = double(b^a*((j-i)^(a-1)).*exp(-b*(j-i))/d)/sum_death(j)*test_death(j);
        
        else
        new_death_number(i,j) = 0; 
        end
    end
end
death_transform = sum(new_death_number');
%% we then plot figure 2 based on death_transform and its corresponding timeline
